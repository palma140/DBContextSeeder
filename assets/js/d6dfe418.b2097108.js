"use strict";(self.webpackChunkdbcontextseeder_docs=self.webpackChunkdbcontextseeder_docs||[]).push([[7863],{8453:(e,r,n)=>{n.d(r,{R:()=>l,x:()=>a});var d=n(6540);const s={},i=d.createContext(s);function l(e){const r=d.useContext(i);return d.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),d.createElement(i.Provider,{value:r},e.children)}},9930:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>a,default:()=>o,frontMatter:()=>l,metadata:()=>d,toc:()=>t});const d=JSON.parse('{"id":"basics/seeders/seeder-reference","title":"Seeders Reference","description":"\ud83d\udc64 Personal","source":"@site/docs/basics/seeders/seeder-reference.md","sourceDirName":"basics/seeders","slug":"/basics/seeders/seeder-reference","permalink":"/DBContextSeeder/docs/basics/seeders/seeder-reference","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":15,"frontMatter":{"sidebar_position":15},"sidebar":"tutorialSidebar","previous":{"title":"\u270f\ufe0f Text","permalink":"/DBContextSeeder/docs/basics/seeders/text/"},"next":{"title":"Modifiers","permalink":"/DBContextSeeder/docs/category/modifiers"}}');var s=n(4848),i=n(8453);const l={sidebar_position:15},a="Seeders Reference",c={},t=[{value:"\ud83d\udc64 Personal",id:"-personal",level:2},{value:"EmailSeeder",id:"emailseeder",level:3},{value:"FirstNameSeeder",id:"firstnameseeder",level:3},{value:"FullNameSeeder",id:"fullnameseeder",level:3},{value:"LastNameSeeder",id:"lastnameseeder",level:3},{value:"PasswordSeeder",id:"passwordseeder",level:3},{value:"PhoneNumberSeeder",id:"phonenumberseeder",level:3},{value:"TitleSeeder",id:"titleseeder",level:3},{value:"UsernameSeeder",id:"usernameseeder",level:3},{value:"\ud83d\udd52 Temporal",id:"-temporal",level:2},{value:"DateSeeder",id:"dateseeder",level:3},{value:"TimezoneSeeder",id:"timezoneseeder",level:3},{value:"\ud83c\udfe2 Company",id:"-company",level:2},{value:"CompanyNameSeeder",id:"companynameseeder",level:3},{value:"\ud83d\udcb0 Currency",id:"-currency",level:2},{value:"CurrencyCodeSeeder",id:"currencycodeseeder",level:3},{value:"\ud83c\udf0d Geography",id:"-geography",level:2},{value:"AddressSeeder",id:"addressseeder",level:3},{value:"BuildingNumberSeeder",id:"buildingnumberseeder",level:3},{value:"CitySeeder",id:"cityseeder",level:3},{value:"CountrySeeder",id:"countryseeder",level:3},{value:"CountryCodeSeeder",id:"countrycodeseeder",level:3},{value:"LatitudeSeeder",id:"latitudeseeder",level:3},{value:"LongitudeSeeder",id:"longitudeseeder",level:3},{value:"PostcodeSeeder",id:"postcodeseeder",level:3},{value:"StreetAddressSeeder",id:"streetaddressseeder",level:3},{value:"StreetNameSeeder",id:"streetnameseeder",level:3},{value:"StreetSuffixSeeder",id:"streetsuffixseeder",level:3},{value:"\ud83c\udf10 Internet",id:"-internet",level:2},{value:"DomainNameSeeder",id:"domainnameseeder",level:3},{value:"Ipv4Seeder",id:"ipv4seeder",level:3},{value:"Ipv6Seeder",id:"ipv6seeder",level:3},{value:"LocalIpv4Seeder",id:"localipv4seeder",level:3},{value:"MacAddressSeeder",id:"macaddressseeder",level:3},{value:"UrlSeeder",id:"urlseeder",level:3},{value:"\ud83d\udd22 Numbers",id:"-numbers",level:2},{value:"DigitSeeder",id:"digitseeder",level:3},{value:"DigitNotSeeder",id:"digitnotseeder",level:3},{value:"DigitalNotNullSeeder",id:"digitalnotnullseeder",level:3},{value:"FloatSeeder",id:"floatseeder",level:3},{value:"NumberSeeder",id:"numberseeder",level:3},{value:"NumberBetweenSeeder",id:"numberbetweenseeder",level:3},{value:"\ud83d\udcb3 Payment",id:"-payment",level:2},{value:"CreditCardDetailsSeeder",id:"creditcarddetailsseeder",level:3},{value:"CreditCardExpirationDateSeeder",id:"creditcardexpirationdateseeder",level:3},{value:"CreditCardNumberSeeder",id:"creditcardnumberseeder",level:3},{value:"CreditCardTypeSeeder",id:"creditcardtypeseeder",level:3},{value:"IbanSeeder",id:"ibanseeder",level:3},{value:"SwiftBicNumberSeeder",id:"swiftbicnumberseeder",level:3},{value:"\ud83e\uddea Miscellaneous",id:"-miscellaneous",level:2},{value:"ArraySeeder",id:"arrayseeder",level:3},{value:"BooleanSeeder",id:"booleanseeder",level:3},{value:"CsvSeeder",id:"csvseeder",level:3},{value:"EmojiSeeder",id:"emojiseeder",level:3},{value:"File Seeder",id:"file-seeder",level:3},{value:"LanguageCodeSeeder",id:"languagecodeseeder",level:3},{value:"LocaleSeeder",id:"localeseeder",level:3},{value:"Md5Seeder",id:"md5seeder",level:3},{value:"SequentialNumberSeeder",id:"sequentialnumberseeder",level:3},{value:"Sha1Seeder",id:"sha1seeder",level:3},{value:"Sha256Seeder",id:"sha256seeder",level:3},{value:"SqlSeeder",id:"sqlseeder",level:3},{value:"TimeSeriesSeeder",id:"timeseriesseeder",level:3},{value:"ValueSeeder",id:"valueseeder",level:3},{value:"WeightValuesSeeder",id:"weightvaluesseeder",level:3},{value:"\u270f\ufe0f Text",id:"\ufe0f-text",level:2},{value:"BothifySeeder",id:"bothifyseeder",level:3},{value:"LexifySeeder",id:"lexifyseeder",level:3},{value:"LetterSeeder",id:"letterseeder",level:3},{value:"RandomStringSeeder",id:"randomstringseeder",level:3},{value:"TextSeeder",id:"textseeder",level:3}];function h(e){const r={a:"a",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"seeders-reference",children:"Seeders Reference"})}),"\n",(0,s.jsx)(r.h2,{id:"-personal",children:"\ud83d\udc64 Personal"}),"\n",(0,s.jsx)(r.h3,{id:"emailseeder",children:"EmailSeeder"}),"\n",(0,s.jsx)(r.p,{children:"Generates random email addresses."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->email('email');\n"})}),"\n",(0,s.jsx)(r.h3,{id:"firstnameseeder",children:"FirstNameSeeder"}),"\n",(0,s.jsx)(r.p,{children:"Generates first names."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->firstName('first_name');\n$seeder->firstName('first_name', 'male'); // or with optional gender parameter\n"})}),"\n",(0,s.jsx)(r.h3,{id:"fullnameseeder",children:"FullNameSeeder"}),"\n",(0,s.jsx)(r.p,{children:"Generates full names."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->name('name');\n"})}),"\n",(0,s.jsx)(r.h3,{id:"lastnameseeder",children:"LastNameSeeder"}),"\n",(0,s.jsx)(r.p,{children:"Generates last names."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->lastname('last_name');\n$seeder->lastname('last_name', 'female'); // or with optional gender parameter\n"})}),"\n",(0,s.jsx)(r.h3,{id:"passwordseeder",children:"PasswordSeeder"}),"\n",(0,s.jsx)(r.p,{children:"Generates passwords."}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Parameters:"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"$min"}),": Minimum password length."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"$max"}),": Maximum password length."]}),"\n"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->password('password', $min, $max);\n"})}),"\n",(0,s.jsx)(r.h3,{id:"phonenumberseeder",children:"PhoneNumberSeeder"}),"\n",(0,s.jsx)(r.p,{children:"Generates phone numbers."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->phoneNumber('phone');\n"})}),"\n",(0,s.jsx)(r.h3,{id:"titleseeder",children:"TitleSeeder"}),"\n",(0,s.jsx)(r.p,{children:"Generates name titles (Mr., Dr.)."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->title('title');\n"})}),"\n",(0,s.jsx)(r.h3,{id:"usernameseeder",children:"UsernameSeeder"}),"\n",(0,s.jsx)(r.p,{children:"Generates usernames."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->username('username');\n"})}),"\n",(0,s.jsx)(r.h2,{id:"-temporal",children:"\ud83d\udd52 Temporal"}),"\n",(0,s.jsx)(r.h3,{id:"dateseeder",children:"DateSeeder"}),"\n",(0,s.jsx)(r.p,{children:"Generates random dates."}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Parameters:"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"$format"})," ",(0,s.jsx)(r.em,{children:"(string|null, optional)"}),": The date format (e.g., ",(0,s.jsx)(r.code,{children:"'Y-m-d'"}),"). Default is ",(0,s.jsx)(r.code,{children:"'Y-m-d'"}),".",(0,s.jsx)(r.br,{}),"\n","See ",(0,s.jsx)(r.a,{href:"https://www.php.net/manual/en/datetime.format.php",children:"PHP date format reference"})," for supported formats."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"$startDate"})," ",(0,s.jsx)(r.em,{children:"(string|null, optional)"}),": The start date for the range (e.g., ",(0,s.jsx)(r.code,{children:"'2000-01-01'"}),"). Default is ",(0,s.jsx)(r.code,{children:"'1970-01-01'"}),"."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"$endDate"})," ",(0,s.jsx)(r.em,{children:"(string|null, optional)"}),": The end date for the range (e.g., ",(0,s.jsx)(r.code,{children:"'2025-12-31'"}),"). Default is today."]}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Usage:"})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->date('created_at', 'Y-m-d H:i:s', '2020-01-01', '2023-12-31');\n"})}),"\n",(0,s.jsx)(r.h3,{id:"timezoneseeder",children:"TimezoneSeeder"}),"\n",(0,s.jsx)(r.p,{children:"Generates timezones (e.g., UTC+1)."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->timezone('timezone');\n"})}),"\n",(0,s.jsx)(r.h2,{id:"-company",children:"\ud83c\udfe2 Company"}),"\n",(0,s.jsx)(r.h3,{id:"companynameseeder",children:"CompanyNameSeeder"}),"\n",(0,s.jsx)(r.p,{children:"Generates company names."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->companyName('company');\n"})}),"\n",(0,s.jsx)(r.h2,{id:"-currency",children:"\ud83d\udcb0 Currency"}),"\n",(0,s.jsx)(r.h3,{id:"currencycodeseeder",children:"CurrencyCodeSeeder"}),"\n",(0,s.jsx)(r.p,{children:"Generates currency codes (USD, EUR)."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->currencyCode('currency');\n"})}),"\n",(0,s.jsx)(r.h2,{id:"-geography",children:"\ud83c\udf0d Geography"}),"\n",(0,s.jsx)(r.h3,{id:"addressseeder",children:"AddressSeeder"}),"\n",(0,s.jsx)(r.p,{children:"Full address."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->address('address');\n"})}),"\n",(0,s.jsx)(r.h3,{id:"buildingnumberseeder",children:"BuildingNumberSeeder"}),"\n",(0,s.jsx)(r.p,{children:"Generates building numbers."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->buildingNumber('building');\n"})}),"\n",(0,s.jsx)(r.h3,{id:"cityseeder",children:"CitySeeder"}),"\n",(0,s.jsx)(r.p,{children:"Generates city names."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->city('city');\n"})}),"\n",(0,s.jsx)(r.h3,{id:"countryseeder",children:"CountrySeeder"}),"\n",(0,s.jsx)(r.p,{children:"Generates country names."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->country('country');\n"})}),"\n",(0,s.jsx)(r.h3,{id:"countrycodeseeder",children:"CountryCodeSeeder"}),"\n",(0,s.jsx)(r.p,{children:"Generates country codes (e.g., PT, US)."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->countryCode('code');\n"})}),"\n",(0,s.jsx)(r.h3,{id:"latitudeseeder",children:"LatitudeSeeder"}),"\n",(0,s.jsx)(r.p,{children:"Generates latitude."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->latitude('lat');\n"})}),"\n",(0,s.jsx)(r.h3,{id:"longitudeseeder",children:"LongitudeSeeder"}),"\n",(0,s.jsx)(r.p,{children:"Generates longitude."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->longitude('lng');\n"})}),"\n",(0,s.jsx)(r.h3,{id:"postcodeseeder",children:"PostcodeSeeder"}),"\n",(0,s.jsx)(r.p,{children:"Generates postal codes."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->postcode('zip');\n"})}),"\n",(0,s.jsx)(r.h3,{id:"streetaddressseeder",children:"StreetAddressSeeder"}),"\n",(0,s.jsx)(r.p,{children:"Full street address."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->streetAddress('street');\n"})}),"\n",(0,s.jsx)(r.h3,{id:"streetnameseeder",children:"StreetNameSeeder"}),"\n",(0,s.jsx)(r.p,{children:"Street names."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->streetName('street_name');\n"})}),"\n",(0,s.jsx)(r.h3,{id:"streetsuffixseeder",children:"StreetSuffixSeeder"}),"\n",(0,s.jsx)(r.p,{children:"Street suffixes (Ave, Rd, etc.)."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->streetSuffix('suffix');\n"})}),"\n",(0,s.jsx)(r.h2,{id:"-internet",children:"\ud83c\udf10 Internet"}),"\n",(0,s.jsx)(r.h3,{id:"domainnameseeder",children:"DomainNameSeeder"}),"\n",(0,s.jsx)(r.p,{children:"Generates domain names."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->domainName('domain');\n"})}),"\n",(0,s.jsx)(r.h3,{id:"ipv4seeder",children:"Ipv4Seeder"}),"\n",(0,s.jsx)(r.p,{children:"Random IPv4 address."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->ipv4('ip');\n"})}),"\n",(0,s.jsx)(r.h3,{id:"ipv6seeder",children:"Ipv6Seeder"}),"\n",(0,s.jsx)(r.p,{children:"Random IPv6 address."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->ipv6('ip');\n"})}),"\n",(0,s.jsx)(r.h3,{id:"localipv4seeder",children:"LocalIpv4Seeder"}),"\n",(0,s.jsx)(r.p,{children:"Local IPv4 addresses."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->localIpv4('local_ip');\n"})}),"\n",(0,s.jsx)(r.h3,{id:"macaddressseeder",children:"MacAddressSeeder"}),"\n",(0,s.jsx)(r.p,{children:"MAC addresses."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->macAddress('mac');\n"})}),"\n",(0,s.jsx)(r.h3,{id:"urlseeder",children:"UrlSeeder"}),"\n",(0,s.jsx)(r.p,{children:"Generates URLs."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->url('website');\n"})}),"\n",(0,s.jsx)(r.h2,{id:"-numbers",children:"\ud83d\udd22 Numbers"}),"\n",(0,s.jsx)(r.h3,{id:"digitseeder",children:"DigitSeeder"}),"\n",(0,s.jsx)(r.p,{children:"Single random digit (0\u20139)."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->digit('digit');\n"})}),"\n",(0,s.jsx)(r.h3,{id:"digitnotseeder",children:"DigitNotSeeder"}),"\n",(0,s.jsx)(r.p,{children:"Digit excluding specific values."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->digitNot('digit', 4);\n"})}),"\n",(0,s.jsx)(r.h3,{id:"digitalnotnullseeder",children:"DigitalNotNullSeeder"}),"\n",(0,s.jsx)(r.p,{children:"Non-zero digits."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->digitNotNull('digit');\n"})}),"\n",(0,s.jsx)(r.h3,{id:"floatseeder",children:"FloatSeeder"}),"\n",(0,s.jsx)(r.p,{children:"Generates float values with optional precision and range."}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Parameters:"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"$nbMaxDecimals"})," ",(0,s.jsx)(r.em,{children:"(int|null, optional)"}),": Number of decimal places. Default is 2."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"$min"})," ",(0,s.jsx)(r.em,{children:"(int|null, optional)"}),": Minimum value. Default is 0."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"$max"})," ",(0,s.jsx)(r.em,{children:"(int|null, optional)"}),": Maximum value. Default is 1000."]}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Usage:"})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->float('value', 2, 10, 500);\n"})}),"\n",(0,s.jsx)(r.h3,{id:"numberseeder",children:"NumberSeeder"}),"\n",(0,s.jsx)(r.p,{children:"Generic number generation with optional digit control."}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Parameters:"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"$nbDigits"})," ",(0,s.jsx)(r.em,{children:"(int|null, optional)"}),": The number of digits for the generated number. Default is ",(0,s.jsx)(r.code,{children:"null"})," (no restriction)."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"$strict"})," ",(0,s.jsx)(r.em,{children:"(bool|null, optional)"}),": If ",(0,s.jsx)(r.code,{children:"true"}),", enforces an exact digit count; if ",(0,s.jsx)(r.code,{children:"false"})," or ",(0,s.jsx)(r.code,{children:"null"}),", allows flexible length."]}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Usage:"})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->number('value', 5, true);\n"})}),"\n",(0,s.jsx)(r.h3,{id:"numberbetweenseeder",children:"NumberBetweenSeeder"}),"\n",(0,s.jsx)(r.p,{children:"Generates numbers between a defined range."}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Parameters:"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"$min"})," ",(0,s.jsx)(r.em,{children:"(int|null, optional)"}),": Minimum value of the range. Default is ",(0,s.jsx)(r.code,{children:"null"}),"."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"$max"})," ",(0,s.jsx)(r.em,{children:"(int|null, optional)"}),": Maximum value of the range. Default is ",(0,s.jsx)(r.code,{children:"null"}),"."]}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Usage:"})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->numberBetween('quantity', 1, 100);\n"})}),"\n",(0,s.jsx)(r.h2,{id:"-payment",children:"\ud83d\udcb3 Payment"}),"\n",(0,s.jsx)(r.h3,{id:"creditcarddetailsseeder",children:"CreditCardDetailsSeeder"}),"\n",(0,s.jsx)(r.p,{children:"Generates full credit card details."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->creditCardDetails('cc');\n"})}),"\n",(0,s.jsx)(r.h3,{id:"creditcardexpirationdateseeder",children:"CreditCardExpirationDateSeeder"}),"\n",(0,s.jsx)(r.p,{children:"Generates expiration dates."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->creditCardExpirationDate('expiry');\n"})}),"\n",(0,s.jsx)(r.h3,{id:"creditcardnumberseeder",children:"CreditCardNumberSeeder"}),"\n",(0,s.jsx)(r.p,{children:"Valid credit card numbers."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->creditCardNumber('number');\n"})}),"\n",(0,s.jsx)(r.h3,{id:"creditcardtypeseeder",children:"CreditCardTypeSeeder"}),"\n",(0,s.jsx)(r.p,{children:"Card type (Visa, MasterCard, etc.)."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->creditCardType('type');\n"})}),"\n",(0,s.jsx)(r.h3,{id:"ibanseeder",children:"IbanSeeder"}),"\n",(0,s.jsx)(r.p,{children:"Generates valid IBANs."}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Parameters:"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"$countryCode"})," ",(0,s.jsx)(r.em,{children:"(string|null, optional)"}),': Optional ISO country code to generate the IBAN for (e.g., "DE", "FR").']}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"$prefix"})," ",(0,s.jsx)(r.em,{children:"(string|null, optional)"}),": Optional prefix to add before the IBAN."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"$length"})," ",(0,s.jsx)(r.em,{children:"(int|null, optional)"}),": Optional fixed length for the generated IBAN."]}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Usage:"})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->iban('iban'); // default random IBAN  \n$seeder->iban('iban', 'DE'); // IBAN for Germany  \n$seeder->iban('iban', 'FR', null, 27); // IBAN for France with length 27\n"})}),"\n",(0,s.jsx)(r.h3,{id:"swiftbicnumberseeder",children:"SwiftBicNumberSeeder"}),"\n",(0,s.jsx)(r.p,{children:"Generates SWIFT/BIC codes."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->swiftBicNumber('bic');\n"})}),"\n",(0,s.jsx)(r.h2,{id:"-miscellaneous",children:"\ud83e\uddea Miscellaneous"}),"\n",(0,s.jsx)(r.h3,{id:"arrayseeder",children:"ArraySeeder"}),"\n",(0,s.jsx)(r.p,{children:"Picks a random value from a given array."}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Parameters:"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"$value"})," ",(0,s.jsx)(r.em,{children:"(array)"}),": The array of possible values to choose from."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"$useOrderedValues"})," ",(0,s.jsx)(r.em,{children:"(bool, optional)"}),": Whether to use values in order (",(0,s.jsx)(r.code,{children:"true"}),") or pick randomly (",(0,s.jsx)(r.code,{children:"false"}),"). Default is ",(0,s.jsx)(r.code,{children:"false"}),"."]}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Usage:"})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n// Pick random value from array\n$seeder->array('choice', ['red', 'blue', 'green']);\n\n// Pick values in order from array\n$seeder->array('choice', ['red', 'blue', 'green'], true);\n"})}),"\n",(0,s.jsx)(r.h3,{id:"booleanseeder",children:"BooleanSeeder"}),"\n",(0,s.jsxs)(r.p,{children:["Generates a random boolean value (",(0,s.jsx)(r.code,{children:"true"})," or ",(0,s.jsx)(r.code,{children:"false"}),")."]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Parameters:"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"$chanceOfGettingTrue"})," ",(0,s.jsx)(r.em,{children:"(int|null, optional)"}),": Probability (0\u2013100) of returning ",(0,s.jsx)(r.code,{children:"true"}),". Default is 50 (equal chance)."]}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Usage:"})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n// 50% chance of true or false\n$seeder->boolean('flag');\n\n// 70% chance to get true\n$seeder->boolean('flag', 70);\n"})}),"\n",(0,s.jsx)(r.h3,{id:"csvseeder",children:"CsvSeeder"}),"\n",(0,s.jsx)(r.p,{children:"Extracts values from a CSV file."}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Parameters:"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"$csvFile"})," ",(0,s.jsx)(r.em,{children:"(string)"}),": The path to the CSV file."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"$target_csv_column"})," ",(0,s.jsx)(r.em,{children:"(string)"}),": The column name or index to extract values from."]}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Usage:"})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->csv('field', __DIR__ . 'data.csv', 'id');\n"})}),"\n",(0,s.jsx)(r.h3,{id:"emojiseeder",children:"EmojiSeeder"}),"\n",(0,s.jsx)(r.p,{children:"Generates emojis."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->emoji('emoji');\n"})}),"\n",(0,s.jsx)(r.h3,{id:"file-seeder",children:"File Seeder"}),"\n",(0,s.jsx)(r.p,{children:"Reads values from a file and applies logic for selection and renaming."}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Parameters:"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"string $field"}),": The name of the field."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"string $source"}),": Path to the source directory or identifier."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"string $destination"}),": Path to the destination directory or identifier."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"Closure|null $callback"}),": Optional callback to process each file."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"Closure|null $renameCallback"}),": Optional callback to rename the file."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"string|null $memoryLimit"}),": Optional memory limit for the seeding process."]}),"\n"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$users->file(\n    'photo',\n    __DIR__ . DIRECTORY_SEPARATOR . 'photos',\n    storage_path('app' . DIRECTORY_SEPARATOR . 'public' . DIRECTORY_SEPARATOR . 'photos'),\n    function ($file, $originalName, $row) {\n        if ($row['gender'] == 'M' && (Str::charAt($originalName, 0) == 'M' || Str::charAt($originalName, 0) == 'm')) {\n            return true;\n        }\n        if ($row['gender'] == 'F' && (Str::charAt($originalName, 0) == 'W' || Str::charAt($originalName, 0) == 'w')) {\n            return true;\n        }\n        return false;\n    },\n    function () {\n        return Str::random(32);\n    },\n    '128M'\n)->unique();\n\n"})}),"\n",(0,s.jsx)(r.h3,{id:"languagecodeseeder",children:"LanguageCodeSeeder"}),"\n",(0,s.jsx)(r.p,{children:"ISO language codes (e.g., en, pt)."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->languageCode();\n"})}),"\n",(0,s.jsx)(r.h3,{id:"localeseeder",children:"LocaleSeeder"}),"\n",(0,s.jsx)(r.p,{children:"Locale codes (e.g., pt_PT, en_US)."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->locale('locale');\n"})}),"\n",(0,s.jsx)(r.h3,{id:"md5seeder",children:"Md5Seeder"}),"\n",(0,s.jsx)(r.p,{children:"Generates MD5 hashes."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->md5('value');\n"})}),"\n",(0,s.jsx)(r.h3,{id:"sequentialnumberseeder",children:"SequentialNumberSeeder"}),"\n",(0,s.jsx)(r.p,{children:"Generates incrementing numbers."}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Parameters:"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"$start"})," ",(0,s.jsx)(r.em,{children:"(int, optional)"}),": The starting number for the sequence. Defaults to 1."]}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Usage:"})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->sequentialNumber('id', 100); // Starts counting from 100\n"})}),"\n",(0,s.jsx)(r.h3,{id:"sha1seeder",children:"Sha1Seeder"}),"\n",(0,s.jsx)(r.p,{children:"SHA1 hashes."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->sha1('value');\n"})}),"\n",(0,s.jsx)(r.h3,{id:"sha256seeder",children:"Sha256Seeder"}),"\n",(0,s.jsx)(r.p,{children:"SHA256 hashes."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->sha256('value');\n"})}),"\n",(0,s.jsx)(r.h3,{id:"sqlseeder",children:"SqlSeeder"}),"\n",(0,s.jsx)(r.p,{children:"Executes raw SQL to fetch values."}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Parameters:"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"$query"})," ",(0,s.jsx)(r.em,{children:"(string)"}),": The SQL query to execute."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"$bindings"})," ",(0,s.jsx)(r.em,{children:"(array, optional)"}),": The bindings for the SQL query."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"$preserveOrder"})," ",(0,s.jsx)(r.em,{children:"(optional, default false)"})," \u2014 Whether to preserve the original order of the SQL results."]}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Usage:"})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->sql('name', 'SELECT name FROM users WHERE active = ?', [1], false);\n"})}),"\n",(0,s.jsx)(r.h3,{id:"timeseriesseeder",children:"TimeSeriesSeeder"}),"\n",(0,s.jsx)(r.p,{children:"Generates time-based sequences (e.g., for charts)."}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Parameters:"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"$startDate"})," ",(0,s.jsx)(r.em,{children:"(string)"}),": The start date for the time series."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"$endDate"})," ",(0,s.jsx)(r.em,{children:"(string)"}),": The end date for the time series."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"$granularity"})," ",(0,s.jsx)(r.em,{children:"(string, optional)"}),": Granularity of the series, defaults to ",(0,s.jsx)(r.code,{children:"'daily'"}),"."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"$entriesPerPeriod"})," ",(0,s.jsx)(r.em,{children:"(callable)"}),": A function returning the number of entries per period."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"$entryFactory"})," ",(0,s.jsx)(r.em,{children:"(callable)"}),": A factory function to create each entry."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"$deltaAvg"})," ",(0,s.jsx)(r.em,{children:"(callable)"}),": A function to compute average delta between entries."]}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Usage:"})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->timeSeries('date', '2023-07-08', '2025-05-10', function (DateTime $date) {\n            $weekDay = $date->format('w');\n            return [8, 15, 12, 14, 19, 30, 50][$weekDay];\n        }, function (DateTime $date) {\n            return [\n                'date' => $date->format('Y-m-d'),\n            ];\n        }, deltaAvg: function (DateTime $date, $baseCount) {\n            $weekDay = $date->format('w');\n\n            $min = $baseCount + [5, 7, 5, 5, 10, 15, 30][$weekDay] * -1;\n            $max = $baseCount + [5, 7, 5, 5, 10, 15, 30][$weekDay];\n\n            return $baseCount + rand($min, $max);\n        });\n\n"})}),"\n",(0,s.jsx)(r.h3,{id:"valueseeder",children:"ValueSeeder"}),"\n",(0,s.jsx)(r.p,{children:"Static or fixed value."}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Parameters:"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"$value"})," ",(0,s.jsx)(r.em,{children:"(mixed)"}),": The value to set for the field."]}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Usage:"})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->value('status', 'active');\n"})}),"\n",(0,s.jsx)(r.h3,{id:"weightvaluesseeder",children:"WeightValuesSeeder"}),"\n",(0,s.jsx)(r.p,{children:"Picks from a weighted distribution."}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Parameters:"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"$weights"})," ",(0,s.jsx)(r.em,{children:"(array)"}),": An associative array where keys are values and values are their weights."]}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Usage:"})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->weightValues('color', ['red' => 90, 'blue' => 20, 'green' => 10]);\n"})}),"\n",(0,s.jsx)(r.h2,{id:"\ufe0f-text",children:"\u270f\ufe0f Text"}),"\n",(0,s.jsx)(r.h3,{id:"bothifyseeder",children:"BothifySeeder"}),"\n",(0,s.jsxs)(r.p,{children:["Generates a string based on a pattern, replacing ",(0,s.jsx)(r.code,{children:"?"})," with random letters and ",(0,s.jsx)(r.code,{children:"#"})," with digits."]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Parameters:"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"$pattern"})," ",(0,s.jsx)(r.em,{children:"(string)"}),": The pattern to use (e.g., ",(0,s.jsx)(r.code,{children:"'??-###'"}),")."]}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Usage:"})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->bothify('code', '??-###'); // Might generate something like 'AB-593'\n"})}),"\n",(0,s.jsx)(r.h3,{id:"lexifyseeder",children:"LexifySeeder"}),"\n",(0,s.jsxs)(r.p,{children:["Generates a random string by replacing ",(0,s.jsx)(r.code,{children:"?"})," in the pattern with random letters (a\u2013z)."]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Usage:"})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->lexify('code', '???-???');\n"})}),"\n",(0,s.jsx)(r.h3,{id:"letterseeder",children:"LetterSeeder"}),"\n",(0,s.jsx)(r.p,{children:"Generates a single random letter (a\u2013z). Supports uniqueness if required."}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Usage:"})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->letter('initial');\n"})}),"\n",(0,s.jsx)(r.h3,{id:"randomstringseeder",children:"RandomStringSeeder"}),"\n",(0,s.jsx)(r.p,{children:"Generates random alphanumeric strings of a specified length. Ensures uniqueness if required."}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Parameters:"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"$string_size"})," ",(0,s.jsx)(r.em,{children:"(int|null, optional)"}),": The length of the random string. Default is 16 if not set explicitly."]}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Usage:"})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->randomString('token', 32);\n"})}),"\n",(0,s.jsx)(r.h3,{id:"textseeder",children:"TextSeeder"}),"\n",(0,s.jsx)(r.p,{children:"Generates random text content with a character limit. Ensures uniqueness if required."}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Parameters:"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"$maxCharacters"})," ",(0,s.jsx)(r.em,{children:"(int)"}),": The maximum number of characters in the generated text."]}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Usage:"})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"use IPLeiria\\ESTG\\EI\\DBContextSeeder\\TableSeeder;\n\n$seeder->text('description', 200);\n"})})]})}function o(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}}}]);